services:
  nats:
    image: nats

  jetstream:
    image: nats
    command: ["-js"]

  mongostore:
    image: mongo
    command: ["--quiet", "--logpath", "/dev/null", "--bind_ip_all"]

  mongostore_replicaset:
    image: mongo
    command: ["--quiet", "--logpath", "/dev/null", "--replSet", "rs0", "--bind_ip_all"]

  mongostore_replicaset_init:
    image: mongo
    entrypoint: /entrypoint.sh
    environment:
      REPLICA_HOST: mongostore_replicaset
    volumes:
      - "${PWD}/.docker/init-mongo.sh:/entrypoint.sh"
  
  mongosnap:
    image: mongo
    command: ["--quiet", "--logpath", "/dev/null", "--bind_ip_all"]

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  test:
    depends_on:
      - nats
      - jetstream
      - mongostore
      - mongostore_replicaset
      - mongostore_replicaset_init
      - mongosnap
      - postgres
    build:
      context: ..
      dockerfile: .docker/coverage.Dockerfile
      args:
        TAGS: nats,mongo,postgres
    environment:
      - NATS_URL=nats://nats:4222
      - JETSTREAM_URL=nats://jetstream:4222
      - MONGOSTORE_URL=mongodb://mongostore:27017
      - MONGOREPLSTORE_URL=mongodb://mongostore_replicaset:27017
      - MONGOSNAP_URL=mongodb://mongosnap:27017
      - MONGOMODEL_URL=mongodb://mongostore_replicaset:27017
      - POSTGRES_EVENTSTORE=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
    volumes:
      - ../out:/coverage/out
